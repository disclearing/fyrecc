package cc.fyre.hub.cosmetic.categories.wearablesimport cc.fyre.hub.cosmetic.Cosmeticimport org.bukkit.Colorimport org.bukkit.Materialimport org.bukkit.entity.Playerimport org.bukkit.inventory.ItemStackimport org.bukkit.inventory.meta.LeatherArmorMeta/** * Equips the player with colored armour based on their rank. */class RankArmourCosmetic(private val rankName: String, private val permission: String, private val hidden: Boolean, val color: Color) : Cosmetic {    override fun getIcon(): ItemStack {        val itemStack = ItemStack(Material.LEATHER_HELMET)        val itemMeta = itemStack.itemMeta as LeatherArmorMeta        itemMeta.color = color        itemStack.itemMeta = itemMeta        return itemStack    }    override fun getName(): String {        return "$rankName Rank Armour"    }    override fun getDescription(): List<String> {        return arrayListOf(                "&6Get a set of armour matching",                "&6your rank's color."        )    }    override fun getPermission(): String {        return permission    }    override fun hiddenIfNotPermitted(): Boolean {        return hidden    }    override fun onEnable(player: Player) {        val armour = arrayOf(                ItemStack(Material.LEATHER_HELMET),                ItemStack(Material.LEATHER_CHESTPLATE),                ItemStack(Material.LEATHER_LEGGINGS),                ItemStack(Material.LEATHER_BOOTS)        )        for (armourPiece in armour) {            val meta = armourPiece.itemMeta as LeatherArmorMeta            meta.color = color            armourPiece.itemMeta = meta        }        player.inventory.armorContents = armour        player.updateInventory()        player.closeInventory()    }    override fun onDisable(player: Player) {        player.inventory.armorContents = arrayOfNulls(4)        player.updateInventory()        player.closeInventory()    }}